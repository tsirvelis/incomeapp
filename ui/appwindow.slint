import { Button, VerticalBox, LineEdit, GroupBox, StandardListView } from "std-widgets.slint";

export component AppWindow inherits Window {

    in property <string> results: "";
    in-out property <bool> curtains;
    callback divide-income(string);
    animate background { duration: 800ms; }

    background: #afafaf;
    
    GridLayout {
        padding: 50px;
        spacing: 20px;
        Row {
            text := Text {
                text: "Enter Total Income";
                horizontal-alignment: center;
                font-size: 36px;
                font-weight: 900;
                color: black;
            }
        }
        Row {
            income := LineEdit {
                horizontal-alignment: center;
                font-size: 16px;
                placeholder-text: "Enter your number";
            }
        }
        Row {
            button := Button {
                text: "Calculate";
                primary: true;
                
                clicked => {
                    root.curtains = !root.curtains;
                    divide-income(income.text);
                }
            }
        }
        Row {
            VerticalBox {
                Rectangle {
                    height: 100px;
                    background: #f2f2f2;
                    Text {
                        color: #000000;
                        font-size: 16px;
                        font-weight: 500;
                        text: root.results;
                    }
                
                    // Left rectangle
                    Rectangle {
                        background: #333333;
                        x: 0;
                        width: curtains ? 0px : (parent.width / 2);
                        height: parent.height;
                        animate width {duration: 1000ms; easing: ease-in;}
                    }
                    // Right rectangle
                    Rectangle {
                        background: #333333;
                        x: curtains ? parent.width : (parent.width / 2);
                        width: curtains ? 0px : (parent.width / 2);
                        height: parent.height;
                        animate width {
                            duration: 250ms; easing: ease-in;
                        }
                        animate x {
                            duration: 250ms; easing: ease-in;   
                        }
                    }

                }         
            }
        }
    }   
}
